{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo}from'react';import'./Wapp.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Wapp(){const apiKey=\"7996effa26e916ad74de3bb79b2f14d7\";// Replace with your own API key\nconst[weatherData,setWeatherData]=useState([]);const[error,setError]=useState(null);// Wrap cities in useMemo to avoid redefining on each render\nconst cities=useMemo(()=>[\"Milano\",\"Roma\",\"Bologna\",\"Palermo\",\"Napoli\",\"Torino\",\"Firenze\"],[]);const clearWeatherCards=useCallback(()=>{setWeatherData([]);// Clear the weather data state\nsetError(null);// Clear any previous errors\n},[]);const getWeather=useCallback(async selectedCity=>{clearWeatherCards();const url=`https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&lang=it&units=metric&appid=${apiKey}`;try{const response=await fetch(url);if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setWeatherData([data]);// Update the weather data state for a single city\n}catch(error){setError('Failed to fetch weather data');}},[apiKey,clearWeatherCards]);const getWeatherForAllCities=useCallback(async()=>{clearWeatherCards();try{const promises=cities.map(city=>fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=it&units=metric&appid=${apiKey}`));const results=await Promise.all(promises);const data=await Promise.all(results.map(result=>result.json()));setWeatherData(data);// Update the weather data state with all cities' data\n}catch(error){setError('Failed to fetch weather data');}},[apiKey,clearWeatherCards,cities]);const getWeatherForAllCitiesSequentially=useCallback(async()=>{clearWeatherCards();const data=[];try{for(const city of cities){const response=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=it&units=metric&appid=${apiKey}`);if(!response.ok){throw new Error('Network response was not ok');}const cityData=await response.json();data.push(cityData);}setWeatherData(data);// Update the weather data state with sequential data\n}catch(error){setError('Failed to fetch weather data');}},[apiKey,clearWeatherCards,cities]);useEffect(()=>{const form=document.getElementById(\"city-form\");form.addEventListener(\"submit\",event=>{event.preventDefault();// Prevents form from refreshing page\nconst selectedCity=document.getElementById(\"city-select\").value;getWeather(selectedCity);});const allCitiesSyncButton=document.getElementById(\"all-cities-sync\");allCitiesSyncButton.addEventListener(\"click\",getWeatherForAllCities);const allCitiesButton=document.getElementById(\"all-cities\");allCitiesButton.addEventListener(\"click\",getWeatherForAllCitiesSequentially);// Clean up event listeners when component unmounts\nreturn()=>{form.removeEventListener(\"submit\",()=>{});allCitiesSyncButton.removeEventListener(\"click\",()=>{});allCitiesButton.removeEventListener(\"click\",()=>{});};},[getWeather,getWeatherForAllCities,getWeatherForAllCitiesSequentially]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid animated-gradient py-5\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title text-center mb-5\",children:\"IWWA\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"title text-center mb-5\",children:\"Italian Worst Weather App\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6 offset-md-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"title\",children:\"Display one city\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"city-form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group mb-3\",children:/*#__PURE__*/_jsx(\"select\",{id:\"city-select\",className:\"form-select\",children:cities.map(city=>/*#__PURE__*/_jsx(\"option\",{value:city,children:city},city))})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"display-button\",className:\"btn btn-primary\",children:\"Display\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6 offset-md-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"title mt-3\",children:\"Display Cities using Promise.all\"}),/*#__PURE__*/_jsx(\"button\",{id:\"all-cities-sync\",className:\"btn btn-primary mt-1 mb-3\",children:\"Display all #1\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"title mt-3\",children:\"Display Cities one by one\"}),/*#__PURE__*/_jsx(\"button\",{id:\"all-cities\",className:\"btn btn-primary mt-1 mb-3\",children:\"Display all #2\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-5\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"weather-cards\",className:\"col-md-12 d-flex justify-content-center flex-wrap\",children:[error&&/*#__PURE__*/_jsx(\"p\",{children:error}),weatherData.length>0&&weatherData.map((cityData,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card m-2\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:cityData.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Temperature: \",cityData.main.temp,\" \\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Weather: \",cityData.weather[0].description]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[\"Humidity: \",cityData.main.humidity,\" %\"]})]},index))]})})]});}export default Wapp;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","jsx","_jsx","jsxs","_jsxs","Wapp","apiKey","weatherData","setWeatherData","error","setError","cities","clearWeatherCards","getWeather","selectedCity","url","response","fetch","ok","Error","data","json","getWeatherForAllCities","promises","map","city","results","Promise","all","result","getWeatherForAllCitiesSequentially","cityData","push","form","document","getElementById","addEventListener","event","preventDefault","value","allCitiesSyncButton","allCitiesButton","removeEventListener","className","children","id","type","length","index","name","main","temp","weather","description","humidity"],"sources":["/Users/giuseppebondi/Documents/GitHub/EserciziTW/src/Wapp.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport './Wapp.css';\n\nfunction Wapp() {\n    const apiKey = \"7996effa26e916ad74de3bb79b2f14d7\"; // Replace with your own API key\n    const [weatherData, setWeatherData] = useState([]);\n    const [error, setError] = useState(null);\n\n    // Wrap cities in useMemo to avoid redefining on each render\n    const cities = useMemo(() => [\"Milano\", \"Roma\", \"Bologna\", \"Palermo\", \"Napoli\", \"Torino\", \"Firenze\"], []);\n\n    const clearWeatherCards = useCallback(() => {\n        setWeatherData([]); // Clear the weather data state\n        setError(null); // Clear any previous errors\n    }, []);\n\n    const getWeather = useCallback(async (selectedCity) => {\n        clearWeatherCards();\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${selectedCity}&lang=it&units=metric&appid=${apiKey}`;\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            setWeatherData([data]); // Update the weather data state for a single city\n        } catch (error) {\n            setError('Failed to fetch weather data');\n        }\n    }, [apiKey, clearWeatherCards]);\n\n    const getWeatherForAllCities = useCallback(async () => {\n        clearWeatherCards();\n        try {\n            const promises = cities.map(city => fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=it&units=metric&appid=${apiKey}`));\n            const results = await Promise.all(promises);\n            const data = await Promise.all(results.map(result => result.json()));\n            setWeatherData(data); // Update the weather data state with all cities' data\n        } catch (error) {\n            setError('Failed to fetch weather data');\n        }\n    }, [apiKey, clearWeatherCards, cities]);\n\n    const getWeatherForAllCitiesSequentially = useCallback(async () => {\n        clearWeatherCards();\n        const data = [];\n        try {\n            for (const city of cities) {\n                const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=it&units=metric&appid=${apiKey}`);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const cityData = await response.json();\n                data.push(cityData);\n            }\n            setWeatherData(data); // Update the weather data state with sequential data\n        } catch (error) {\n            setError('Failed to fetch weather data');\n        }\n    }, [apiKey, clearWeatherCards, cities]);\n\n    useEffect(() => {\n        const form = document.getElementById(\"city-form\");\n        form.addEventListener(\"submit\", event => {\n            event.preventDefault(); // Prevents form from refreshing page\n            const selectedCity = document.getElementById(\"city-select\").value;\n            getWeather(selectedCity);\n        });\n\n        const allCitiesSyncButton = document.getElementById(\"all-cities-sync\");\n        allCitiesSyncButton.addEventListener(\"click\", getWeatherForAllCities);\n\n        const allCitiesButton = document.getElementById(\"all-cities\");\n        allCitiesButton.addEventListener(\"click\", getWeatherForAllCitiesSequentially);\n\n        // Clean up event listeners when component unmounts\n        return () => {\n            form.removeEventListener(\"submit\", () => {});\n            allCitiesSyncButton.removeEventListener(\"click\", () => {});\n            allCitiesButton.removeEventListener(\"click\", () => {});\n        };\n    }, [getWeather, getWeatherForAllCities, getWeatherForAllCitiesSequentially]);\n\n    return (\n        <div className=\"container-fluid animated-gradient py-5\">\n            <h1 className=\"title text-center mb-5\">IWWA</h1>\n            <h2 className=\"title text-center mb-5\">Italian Worst Weather App</h2>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <h3 className=\"title\">Display one city</h3>\n                    <form id=\"city-form\">\n                        <div className=\"form-group mb-3\">\n                            <select id=\"city-select\" className=\"form-select\">\n                                {cities.map(city => (\n                                    <option key={city} value={city}>{city}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <button type=\"submit\" id=\"display-button\" className=\"btn btn-primary\">Display</button>\n                    </form>\n                </div>\n                <div className=\"col-md-6 offset-md-3\">\n                    <h3 className=\"title mt-3\">Display Cities using Promise.all</h3>\n                    <button id=\"all-cities-sync\" className=\"btn btn-primary mt-1 mb-3\">Display all #1</button>\n                    <h3 className=\"title mt-3\">Display Cities one by one</h3>\n                    <button id=\"all-cities\" className=\"btn btn-primary mt-1 mb-3\">Display all #2</button>\n                </div>\n            </div>\n            <div className=\"row mt-5\">\n                <div id=\"weather-cards\" className=\"col-md-12 d-flex justify-content-center flex-wrap\">\n                    {error && <p>{error}</p>}\n                    {weatherData.length > 0 && weatherData.map((cityData, index) => (\n                        <div className=\"card m-2\" key={index}>\n                            <h5 className=\"card-title\">{cityData.name}</h5>\n                            <p className=\"card-text\">Temperature: {cityData.main.temp} °C</p>\n                            <p className=\"card-text\">Weather: {cityData.weather[0].description}</p>\n                            <p className=\"card-text\">Humidity: {cityData.main.humidity} %</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Wapp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
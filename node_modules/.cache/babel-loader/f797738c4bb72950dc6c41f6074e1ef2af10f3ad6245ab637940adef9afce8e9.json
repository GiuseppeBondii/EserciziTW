{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppebondi/Documents/GitHub/EserciziTW/src/Fibonacci.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fibonacci() {\n  _s();\n  const [n, setN] = useState(0);\n  const [sequence, setSequence] = useState([]);\n  const handleInputChange = event => {\n    setN(parseInt(event.target.value, 10));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (n <= 0) {\n      alert(\"Inserisci un numero positivo\");\n      return;\n    }\n    let output = [0, 1];\n    if (n === 1) {\n      setSequence([0]);\n    } else if (n === 2) {\n      setSequence(output);\n    } else {\n      for (let i = 2; i < n; i++) {\n        output.push(output[output.length - 1] + output[output.length - 2]);\n      }\n      setSequence(output);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quanti numeri della sequenza devo stampare?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"INPUT\",\n        value: n,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Calcola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'black'\n      },\n      children: sequence.join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Fibonacci, \"r3ZkVdxE+vci4aIxz3/bZjk2S+A=\");\n_c = Fibonacci;\nexport default Fibonacci;\nvar _c;\n$RefreshReg$(_c, \"Fibonacci\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fibonacci","_s","n","setN","sequence","setSequence","handleInputChange","event","parseInt","target","value","handleSubmit","preventDefault","alert","output","i","push","length","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","style","color","join","_c","$RefreshReg$"],"sources":["/Users/giuseppebondi/Documents/GitHub/EserciziTW/src/Fibonacci.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Fibonacci() {\n    const [n, setN] = useState(0);\n    const [sequence, setSequence] = useState([]);\n\n    const handleInputChange = (event) => {\n        setN(parseInt(event.target.value, 10));\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (n <= 0) {\n            alert(\"Inserisci un numero positivo\");\n            return;\n        }\n\n        let output = [0, 1];\n\n        if (n === 1) {\n            setSequence([0]);\n        } else if (n === 2) {\n            setSequence(output);\n        } else {\n            for (let i = 2; i < n; i++) {\n                output.push(output[output.length - 1] + output[output.length - 2]);\n            }\n            setSequence(output);\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>Quanti numeri della sequenza devo stampare?</label>\n                <input type=\"number\" id=\"INPUT\" value={n} onChange={handleInputChange}></input>\n                <input type=\"submit\" value=\"Calcola\"></input>\n            </form>\n            <h1 style={{color:'black'}}>{sequence.join(\", \")}</h1>\n        </div>\n    );\n}\n\nexport default Fibonacci;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,CAAC,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,IAAI,CAACK,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,YAAY,GAAIJ,KAAK,IAAK;IAC5BA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEtB,IAAIV,CAAC,IAAI,CAAC,EAAE;MACRW,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACJ;IAEA,IAAIC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAEnB,IAAIZ,CAAC,KAAK,CAAC,EAAE;MACTG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM,IAAIH,CAAC,KAAK,CAAC,EAAE;MAChBG,WAAW,CAACS,MAAM,CAAC;IACvB,CAAC,MAAM;MACH,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,CAAC,EAAEa,CAAC,EAAE,EAAE;QACxBD,MAAM,CAACE,IAAI,CAACF,MAAM,CAACA,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACA,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC,CAAC;MACtE;MACAZ,WAAW,CAACS,MAAM,CAAC;IACvB;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAMoB,QAAQ,EAAER,YAAa;MAAAO,QAAA,gBACzBnB,OAAA;QAAAmB,QAAA,EAAO;MAA2C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1DxB,OAAA;QAAOyB,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC,OAAO;QAACf,KAAK,EAAER,CAAE;QAACwB,QAAQ,EAAEpB;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/ExB,OAAA;QAAOyB,IAAI,EAAC,QAAQ;QAACd,KAAK,EAAC;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACPxB,OAAA;MAAI4B,KAAK,EAAE;QAACC,KAAK,EAAC;MAAO,CAAE;MAAAV,QAAA,EAAEd,QAAQ,CAACyB,IAAI,CAAC,IAAI;IAAC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd;AAACtB,EAAA,CAxCQD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}